lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
#param<-
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HH.R')
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HH.R')
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
Vtheta
class(Vtheta)
Vtheta <- matrix(NA,length(thetah),length(thetah))
Vtheta
try(Vtheta <- solve(-hessian(loglik,thetah)), silent = TRUE)
Vtheta
rep(NA,length(thetah))
SEtheta <- rep(NA,length(thetah))
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HH.R')
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
Vtheta
SEtheta
SEna <- NA
SEcheck <- NA
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HH.R')
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
SEcheck
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HH.R')
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
SEcheck
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HH.R')
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
Vtheta
SEcheck
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HH.R')
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
anyNA(Vtheta)
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HH.R')
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HH.R')
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
anyNA(Vtheta)
min(diag(Vtheta))<0
SEcheck
param<-try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=FALSE))
param
param$SEcheck
i
fail_count
if(param$SEcheck=="ERROR"|anyNA(param$theta$zeta)==TRUE|anyNA(param$theta$SigmaE)==TRUE|anyNA(param$theta$SigmaPhi)==TRUE){i<- i-1;fail_count <-fail_count+1}
i
fail_count
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
source('~/Documents/GitHub/CoPrimarySWCRT/gendata_copri_varCluster_HoopGir.R')
library(lme4)
#library(nlme)
library(foreach)
#set.seed(3628) #1000 iterations
set.seed(5792) #10000 iterations
dt<-datagen_cont(n=4, m=5, K=2, cv=0, sigmac=matrix(c(1,0.12,0.12,1),2), sigmacp=matrix(c(1,0.18,0.18,1),2), sigmae= matrix(c(2.3,0.1,0.1,2.5),2), eff=c(1.2,0.5), time.eff=c(1.1,1.3,0.9,0.7))$short
lme1<-lmer(out1~time.1+time.2+arm +(1|cluster) +(1|cluster.period),data=dt)
lme2<-lmer(out2~time.1+time.2+arm +(1|cluster) +(1|cluster.period),data=dt)
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
ESSphipsi2
ESSpsi2
ESSpsi1
ESSphi2
ESSphi1
ESSphipsi2
ESSpsi2
ESSpsi1
ESSphi2
ESSphi1
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
Muj
Nujj
Muj
Nujj
ESSphi1
Muj
Nujj
SigmaPhi
InvS2Phi
SigmaPsi
InvS2Psi
SigmaE
solve(SigmaE)
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
temp
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
psizes
mp[j]
mp
mp[cID.period==j]
psizes <- mp[cID.period==j]
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
nperiods[j]
mlist
psizes[k]
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
mlist
bdiag_m(mlist) + kronecker(diag(1,m[j]),SigmaE) + kronecker(matrix(1,m[j],m[j]),SigmaPhi)
bdiag_m(mlist)
mlist
mlist <- NULL
mlist
for (k in 1:nperiods[j]){
mlist[,,k]<- kronecker(matrix(1,psizes[k],psizes[k]), SigmaPsi)
}
mlist
mlist[,,1] <- kronecker(matrix(1,psizes[1],psizes[1]), SigmaPsi)
list(kronecker(matrix(1,psizes[1],psizes[1]), SigmaPsi))
psizes <- mp[cID.period==j]
mlist <- list(kronecker(matrix(1,psizes[1],psizes[1]), SigmaPsi))
for (k in 2:nperiods[j]){
mlist<- c(mlist,list(kronecker(matrix(1,psizes[k],psizes[k]), SigmaPsi)))
}
mlist
list(kronecker(matrix(1,psizes[1],psizes[1]), SigmaPsi))
debugSource('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
mlist
Omega
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
tm1
tm2
as.numeric(c(t(obs) %*% Invj %*% obs))
Invj
c(t(obs) %*% Invj %*% obs)
tm2 <- c(t(obs) %*% Invj %*% obs)
as.numeric(tm2)
tm2[1,1]
tm2[1,1,1]
tm2
as.matrix(c(t(obs) %*% Invj %*% obs))
c(t(obs) %*% Invj %*% obs)
tm2[[1]])
tm2 <- c(t(obs) %*% Invj %*% obs)
tm2
tm2[1]
unlist(c(t(obs) %*% Invj %*% obs))
as.numeric(unlist(c(t(obs) %*% Invj %*% obs)))
matrix(unlist(c(t(obs) %*% Invj %*% obs)),1)
tm2
sapply(tm2, attr, "accession")
tm2$1
tm2
tm2[1]
tm2[1,1]
dim(tm2)
unlist(tm2)
numeric(tm2)
nrow(tm2)
t(obs)
Invj
c(t(obs) %*% Invj %*% obs)
obs
t(obs) %*% Invj %*% obs
tm2 <- t(obs) %*% Invj %*% obs
tm2
temp-(tm1+tm2[1])/2
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HH.R')
source('~/Documents/GitHub/CoPrimarySWCRT/gendata_copri_varCluster_HH.R')
library(nlme)
library(doMC)
library(doRNG)
library(lmeInfo)
setwd("/Users/kdavis07/Documents/GitHub/CoPrimarySWCRT")
source("gendata_copri_varCluster_HH.R")
source("EM_uncorrected_HH.R")
args<-commandArgs(trailingOnly = TRUE)
k<-as.integer(args[1])
if (is.na(k)) k <- 1
paste("Scenario:",k)
ncores<-as.numeric(Sys.getenv("SLURM_CPUS_PER_TASK",1))
if (is.na(ncores)) ncores<-1
registerDoMC(cores=ncores)
# define scenarios
scenarios <- read.table("/Users/kdavis07/Dropbox/SW-CRT Methods Development/2_CoPrimary/RCode/Simulations/Sim_Params.txt", header=TRUE, sep="")
scenarios <- subset(scenarios, scenario == k)
scenario <- k
t <- scenarios$t
N <- scenarios$N
cs <- scenarios$m
eff<-c(scenarios$delta1,scenarios$delta2)
rho01<-matrix(c(scenarios$rho01.11,scenarios$rho01.12,scenarios$rho01.12,scenarios$rho01.22),2)
rho2<-matrix(c(1,scenarios$rho2.12,scenarios$rho2.12,1),2)
vars<-c(1,1) #c(scenarios$var1,scenarios$var2)
bs <- 0
beta <- cumsum(c(0.1,0.1*0.5,0.1*(0.5^2),0.1*(0.5^3),0.1*(0.5^4),0.1*(0.5^5)))[1:t-1]
nsim<-2
set.seed(8374+k)
fail_count <- 0
max_fail <- 200
simData <- naive.simData <- NULL
# Loop Index
i<-0
i<-i+1
itemp<-i
#set.seed(i+173)
dt<-datagen_cont(n=N, m=cs, K=2, cv=0, rho01=rho01, rho2=rho2, vars=vars, eff=eff, time.eff=c(beta,beta))
data<-dt$short
if(t==3){
lme1<-lme(out1~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==4){
lme1<-lme(out1~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
if(t==5){
lme1<-lme(out1~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
lme2<-lme(out2~time.1+time.2+time.3+time.4+arm,random=~1|cluster,data=data,control=lmeControl(returnObject=TRUE))
}
try(EM.estim(data,lme1,lme2, maxiter=500, epsilon=1e-4, verbose=TRUE))
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
library(lme4)
#library(nlme)
library(foreach)
#set.seed(3628) #1000 iterations
set.seed(5792) #10000 iterations
dt<-datagen_cont(n=4, m=5, K=2, cv=0, sigmac=matrix(c(1,0.12,0.12,1),2), sigmacp=matrix(c(1,0.18,0.18,1),2), sigmae= matrix(c(2.3,0.1,0.1,2.5),2), eff=c(1.2,0.5), time.eff=c(1.1,1.3,0.9,0.7))$short
lme1<-lmer(out1~time.1+time.2+arm +(1|cluster) +(1|cluster.period),data=dt)
lme2<-lmer(out2~time.1+time.2+arm +(1|cluster) +(1|cluster.period),data=dt)
source('~/Documents/GitHub/CoPrimarySWCRT/gendata_copri_varCluster_HoopGir.R')
dt<-datagen_cont(n=4, m=5, K=2, cv=0, sigmac=matrix(c(1,0.12,0.12,1),2), sigmacp=matrix(c(1,0.18,0.18,1),2), sigmae= matrix(c(2.3,0.1,0.1,2.5),2), eff=c(1.2,0.5), time.eff=c(1.1,1.3,0.9,0.7))$short
lme1<-lmer(out1~time.1+time.2+arm +(1|cluster) +(1|cluster.period),data=dt)
lme2<-lmer(out2~time.1+time.2+arm +(1|cluster) +(1|cluster.period),data=dt)
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
source('~/Documents/GitHub/CoPrimarySWCRT/EM_uncorrected_HoopGir.R')
EM.estim(dt,lme1,lme2,cluster="cluster",cluster.period="cluster.period",verbose=TRUE)
